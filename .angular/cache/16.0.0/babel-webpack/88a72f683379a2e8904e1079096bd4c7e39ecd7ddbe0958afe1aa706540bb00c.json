{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { QuicklinkModule, QuicklinkStrategy } from 'ngx-quicklink';\nconst routes = [{\n  path: 'settings',\n  loadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule)\n}, {\n  path: 'profile',\n  loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule)\n}, {\n  path: 'editor',\n  loadChildren: () => import('./editor/editor.module').then(m => m.EditorModule)\n}, {\n  path: 'article',\n  loadChildren: () => import('./article/article.module').then(m => m.ArticleModule)\n}];\nlet AppRoutingModule = class AppRoutingModule {};\nAppRoutingModule = __decorate([NgModule({\n  imports: [QuicklinkModule, RouterModule.forRoot(routes, {\n    // preload all modules; optionally we could\n    // implement a custom preloading strategy for just some\n    // of the modules (PRs welcome ðŸ˜‰)\n    preloadingStrategy: QuicklinkStrategy,\n    relativeLinkResolution: 'legacy'\n  })],\n  exports: [RouterModule]\n})], AppRoutingModule);\nexport { AppRoutingModule };","map":{"version":3,"names":["NgModule","RouterModule","QuicklinkModule","QuicklinkStrategy","routes","path","loadChildren","then","m","SettingsModule","ProfileModule","EditorModule","ArticleModule","AppRoutingModule","__decorate","imports","forRoot","preloadingStrategy","relativeLinkResolution","exports"],"sources":["/Users/fejzic.denis/IdeaProjects/realworld-starter-kit_angular-frontent/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QuicklinkModule, QuicklinkStrategy } from 'ngx-quicklink';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'settings',\n\t\tloadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule)\n\t},\n\t{\n\t\tpath: 'profile',\n\t\tloadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule)\n\t},\n\t{\n\t\tpath: 'editor',\n\t\tloadChildren: () => import('./editor/editor.module').then(m => m.EditorModule)\n\t},\n\t{\n\t\tpath: 'article',\n\t\tloadChildren: () => import('./article/article.module').then(m => m.ArticleModule)\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tQuicklinkModule,\n\t\tRouterModule.forRoot(routes, {\n\t\t\t// preload all modules; optionally we could\n\t\t\t// implement a custom preloading strategy for just some\n\t\t\t// of the modules (PRs welcome ðŸ˜‰)\n\t\t\tpreloadingStrategy: QuicklinkStrategy,\n\t\t\trelativeLinkResolution: 'legacy'\n\t\t})],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule {}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAAiBC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,eAAe;AAElE,MAAMC,MAAM,GAAW,CACtB;EACCC,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,cAAc;CACnF,EACD;EACCJ,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,aAAa;CAChF,EACD;EACCL,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACG,YAAY;CAC7E,EACD;EACCN,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACI,aAAa;CAChF,CACD;AAcD,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB,GAAG;AAAnBA,gBAAgB,GAAAC,UAAA,EAZ5Bd,QAAQ,CAAC;EACTe,OAAO,EAAE,CACRb,eAAe,EACfD,YAAY,CAACe,OAAO,CAACZ,MAAM,EAAE;IAC5B;IACA;IACA;IACAa,kBAAkB,EAAEd,iBAAiB;IACrCe,sBAAsB,EAAE;GACxB,CAAC,CAAC;EACJC,OAAO,EAAE,CAAClB,YAAY;CACtB,CAAC,C,EACWY,gBAAgB,CAAG;SAAnBA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}