{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nconst routes = [];\nlet AppRoutingModule = class AppRoutingModule {};\nAppRoutingModule = __decorate([NgModule({\n  imports: [QuicklinkModule, RouterModule.forRoot(routes, {\n    // preload all modules; optionally we could\n    // implement a custom preloading strategy for just some\n    // of the modules (PRs welcome ðŸ˜‰)\n    preloadingStrategy: QuicklinkStrategy,\n    relativeLinkResolution: 'legacy'\n  })],\n  exports: [RouterModule]\n})], AppRoutingModule);\nexport { AppRoutingModule };","map":{"version":3,"names":["NgModule","RouterModule","routes","AppRoutingModule","__decorate","imports","QuicklinkModule","forRoot","preloadingStrategy","QuicklinkStrategy","relativeLinkResolution","exports"],"sources":["/Users/fejzic.denis/IdeaProjects/realworld-starter-kit_angular-frontent/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n];\n\n@NgModule({\n\timports: [\n\t\tQuicklinkModule,\n\t\tRouterModule.forRoot(routes, {\n\t\t\t// preload all modules; optionally we could\n\t\t\t// implement a custom preloading strategy for just some\n\t\t\t// of the modules (PRs welcome ðŸ˜‰)\n\t\t\tpreloadingStrategy: QuicklinkStrategy,\n\t\t\trelativeLinkResolution: 'legacy'\n\t\t})],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule {}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAAiBC,YAAY,QAAQ,iBAAiB;AAEtD,MAAMC,MAAM,GAAW,EACtB;AAcD,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB,GAAG;AAAnBA,gBAAgB,GAAAC,UAAA,EAZ5BJ,QAAQ,CAAC;EACTK,OAAO,EAAE,CACRC,eAAe,EACfL,YAAY,CAACM,OAAO,CAACL,MAAM,EAAE;IAC5B;IACA;IACA;IACAM,kBAAkB,EAAEC,iBAAiB;IACrCC,sBAAsB,EAAE;GACxB,CAAC,CAAC;EACJC,OAAO,EAAE,CAACV,YAAY;CACtB,CAAC,C,EACWE,gBAAgB,CAAG;SAAnBA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}